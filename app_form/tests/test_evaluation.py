#!/usr/bin/env python3
"""
Test simple pour v√©rifier que la fonction d'√©valuation fonctionne
"""

import yaml
from ai_helpers import evaluate_and_order_competences

# Donn√©es de test plus r√©alistes
test_yaml_data = {
    'etape_1_public_cible': {
        'public_cible': {
            'type': 'Enseignants 2d degr√©',
            'profil': 'Groupe homog√®ne',
            'niveau_expertise': 'Interm√©diaire'
        },
        'contexte_formation': {
            'titre': 'Exploiter l\'Intelligence Artificielle pour Concevoir des Formations Innovantes',
            'objectif_general': 'Permettre aux professionnels de la formation de renforcer leurs comp√©tences dans l\'utilisation des outils d\'intelligence artificielle pour concevoir, structurer et optimiser des parcours p√©dagogiques.'
        }
    },
    'etape_2_contraintes': {
        'contraintes_formation': {
            'type_parcours': 'Cr√©ation d\'un nouvel espace',
            'temps_total': 'Entre 3h et 6h'
        }
    },
    'etape_4_competences': {
        'formulations_competences': [
            '√Ä l\'issue de la formation, les participants seront capables d\'identifier divers outils d\'intelligence artificielle adapt√©s √† la conception de formations.',
            '√Ä l\'issue de la formation, les participants sauront d√©crire le fonctionnement des IA g√©n√©ratives, telles que ChatGPT, et leur application dans le contexte p√©dagogique.',
            '√Ä l\'issue de la formation, les participants seront capables d\'utiliser des outils d\'intelligence artificielle pour cr√©er des contenus p√©dagogiques vari√©s, tels que des quiz et des fiches de synth√®se.',
            '√Ä l\'issue de la formation, les participants sauront personnaliser les parcours d\'apprentissage en utilisant des outils d\'intelligence artificielle, pour r√©pondre aux besoins sp√©cifiques des apprenants.'
        ],
        'competence_1': {
            'idees_cles': 'outils d\'IA, identification, formation',
            'niveau': 'Bas',
            'verbes': 'identifier, reconna√Ætre, lister',
            'formulation': '√Ä l\'issue de la formation, les participants seront capables d\'identifier divers outils d\'intelligence artificielle adapt√©s √† la conception de formations.'
        },
        'competence_2': {
            'idees_cles': 'IA g√©n√©ratives, fonctionnement, description',
            'niveau': 'Bas',
            'verbes': 'd√©crire, expliquer, illustrer',
            'formulation': '√Ä l\'issue de la formation, les participants sauront d√©crire le fonctionnement des IA g√©n√©ratives, telles que ChatGPT, et leur application dans le contexte p√©dagogique.'
        },
        'competence_3': {
            'idees_cles': 'cr√©ation de contenus, outils d\'IA, p√©dagogie',
            'niveau': 'Moyen',
            'verbes': 'utiliser, appliquer, produire',
            'formulation': '√Ä l\'issue de la formation, les participants seront capables d\'utiliser des outils d\'intelligence artificielle pour cr√©er des contenus p√©dagogiques vari√©s, tels que des quiz et des fiches de synth√®se.'
        },
        'competence_4': {
            'idees_cles': 'personnalisation, parcours d\'apprentissage, IA',
            'niveau': 'Moyen',
            'verbes': 'personnaliser, adapter, modifier',
            'formulation': '√Ä l\'issue de la formation, les participants sauront personnaliser les parcours d\'apprentissage en utilisant des outils d\'intelligence artificielle, pour r√©pondre aux besoins sp√©cifiques des apprenants.'
        }
    }
}

def test_evaluation():
    """Test de la fonction d'√©valuation"""
    print("=== Test de la fonction d'√©valuation ===")
    print(f"Nombre de comp√©tences √† √©valuer : {len(test_yaml_data['etape_4_competences']['formulations_competences'])}")
    
    result = evaluate_and_order_competences(test_yaml_data)
    
    print(f"\nR√©sultat: {result['success']}")
    
    if result['success']:
        print("‚úÖ Test r√©ussi !")
        evaluation = result['evaluation']
        
        print(f"\nNombre de comp√©tences ordonn√©es : {len(evaluation.get('ordre_competences', []))}")
        
        if 'ordre_competences' in evaluation:
            print("\nüìã Comp√©tences ordonn√©es :")
            for comp in evaluation['ordre_competences']:
                print(f"  {comp['code']}: {comp['formulation'][:50]}...")
                print(f"    Pertinence: {comp['pertinence']}")
                print(f"    Justification: {comp['justification'][:100]}...")
                print()
        
        if 'avis_global' in evaluation:
            print(f"\nüìä Avis global : {evaluation['avis_global'][:200]}...")
        
        if 'points_amelioration' in evaluation:
            print(f"\nüí° Points d'am√©lioration : {len(evaluation['points_amelioration'])} points")
            for point in evaluation['points_amelioration']:
                print(f"  - {point}")
    else:
        print("‚ùå Test √©chou√© !")
        print(f"Erreur: {result.get('error', 'Erreur inconnue')}")

if __name__ == '__main__':
    test_evaluation() 