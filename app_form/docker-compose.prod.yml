version: '3.8'

services:
  # Application Flask
  assistant-magistere:
    build: .
    container_name: assistant-magistere-app
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-1000}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE:-0.7}
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - assistant-network
    expose:
      - "5000"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: assistant-magistere-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - ./output:/app/output:ro
    depends_on:
      - assistant-magistere
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - assistant-network

  # Certbot pour SSL automatique (optionnel)
  certbot:
    image: certbot/certbot
    container_name: assistant-magistere-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./logs/certbot:/var/log/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/html --email your-email@domain.com --agree-tos --no-eff-email -d your-domain.com
    depends_on:
      - nginx
    networks:
      - assistant-network
    profiles:
      - ssl-setup

networks:
  assistant-network:
    driver: bridge

volumes:
  output-data:
  logs-data:
  ssl-data: 